name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  GCP_REGISTRY_DOMAIN: ${{ secrets.GCP_REGISTRY_DOMAIN }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REPO_NAME: ${{ secrets.GCP_REPO_NAME }}
  IMAGE_TAG: ${{ github.sha }}
  TOKEN: ${{ secrets.GITLAB_TOKEN }}
  REPO_PATH: ${{ secrets.GITLAB_REPO_PATH }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Authenticate to Google Cloud
        if: github.ref == 'refs/heads/main'
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker to use Artifact Registry
        if: github.ref == 'refs/heads/main'
        run: |
          gcloud auth configure-docker $GCP_REGISTRY_DOMAIN

      - name: Build & Push Backend Services (if changed)
        if: github.ref == 'refs/heads/main'
        run: |
          set -e
          FULL_REPO="$GCP_REGISTRY_DOMAIN/$GCP_PROJECT_ID/$GCP_REPO_NAME"

          for service in user-service recipe-service; do
            if git diff --name-only HEAD^ HEAD | grep -q "backend/$service/"; then
              echo "ðŸ”¨ Building $service (changes detected)"
              cd backend/$service
              mvn clean package -DskipTests=false
              docker build -t $FULL_REPO/$service:$IMAGE_TAG .
              docker push $FULL_REPO/$service:$IMAGE_TAG
              cd ../../
            else
              echo "âœ… Skipping $service (no changes)"
            fi
          done

      - name: Build & Push Frontend (if changed)
        if: github.ref == 'refs/heads/main'
        run: |
          set -e
          FULL_REPO="$GCP_REGISTRY_DOMAIN/$GCP_PROJECT_ID/$GCP_REPO_NAME"

          if git diff --name-only HEAD^ HEAD | grep -q "frontend/"; then
            echo "ðŸ”¨ Building frontend (changes detected)"
            docker build -t $FULL_REPO/frontend:$IMAGE_TAG -f Dockerfile.frontend .
            docker push $FULL_REPO/frontend:$IMAGE_TAG
          else
            echo "âœ… Skipping frontend (no changes)"
          fi
          
      - name: Track changes and update Helm values
        if: github.ref == 'refs/heads/main'
        run: |
          git config --global user.name "GitHub CI Bot"
          git config --global user.email "ci-bot@example.com"

          git clone "https://oauth2:${TOKEN}@gitlab.com/${REPO_PATH}" helm-repo
          cd helm-repo/my-helm-chart

          CHANGED=false

          if git diff --name-only HEAD^ HEAD | grep -q "backend/user-service/"; then
            yq eval ".userService.image.tag = \"${IMAGE_TAG}\"" -i values.yaml
            CHANGED=true
          fi

          if git diff --name-only HEAD^ HEAD | grep -q "backend/recipe-service/"; then
            yq eval ".recipeService.image.tag = \"${IMAGE_TAG}\"" -i values.yaml
            CHANGED=true
          fi

          if git diff --name-only HEAD^ HEAD | grep -q "frontend/"; then
            yq eval ".frontendService.image.tag = \"${IMAGE_TAG}\"" -i values.yaml
            CHANGED=true
          fi

          cd ..
          if [ "$CHANGED" = true ] && ! git diff --quiet; then
            git add my-helm-chart/values.yaml
            git commit -m "ci: update image tag to ${IMAGE_TAG}"
            git push origin main
          else
            echo "âœ… No Helm tag updates needed."
          fi
