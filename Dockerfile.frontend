FROM node:20-alpine as builder

WORKDIR /app

# Copy package files from root and client directory
COPY package*.json ./
COPY client/package*.json ./client/

# Install dependencies
RUN npm install
RUN cd client && npm install

# Copy source code
COPY . .

# Debugging: check current directory and contents after copying source
RUN echo "Contents of /app after COPY . ." && pwd && ls -la
RUN echo "Contents of /app/client after COPY . ." && ls -la client

# Set build-time argument and environment variable
ARG NODE_ENV=production
ENV NODE_ENV=${NODE_ENV}

# 빌드 명령어 실행 및 결과 확인
RUN npm run build:frontend && \
    echo "Build completed" && \
    echo "Contents of /app after build:" && ls -la && \
    echo "Checking dist directory in /app:" && \
    ls -la dist || echo "dist directory not found in /app" && \
    echo "Checking dist/public directory in /app:" && \
    ls -la dist/public || echo "dist/public directory not found in /app" && \
    echo "Current directory structure after build:" && \
    find . -type d

# Production stage
FROM nginx:alpine

# Copy built files to where Nginx is actually looking
COPY --from=builder /app/dist/public /etc/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf
COPY default.conf /etc/nginx/conf.d/default.conf

# Expose port (기본값)
EXPOSE 80

# Start nginx with environment variable substitution
CMD ["nginx", "-g", "daemon off;"]